# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-11 03:22
from __future__ import unicode_literals

from django.apps import apps
from django.conf import settings
from django.contrib.auth.management import create_permissions
from django.contrib.auth.models import ContentType, Permission, User
from django.db import migrations

from wechat_django.models import (
    MessageHandler, MsgLogFlag, Reply, Rule, WeChatApp)
from wechat_django.models.permission import WECHATPERM_PREFIX


def create_data(apps, schema_editor):
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = False

    # 添加app
    appname = settings.SAMPLEAPPNAME
    appid = input("please enter your appid: ").strip() or appname
    appsecret = input("please enter your appsecret: ").strip() or "secret"
    app = WeChatApp.objects.create(
        title="sample app",
        name=appname,
        appid=appid,
        appsecret=appsecret
    )

    # 增加user
    perm = "{prefix}{appname}".format(
        prefix=WECHATPERM_PREFIX,
        appname=appname
    )
    if not User.objects.filter(username="admin").first():
        User.objects.create_superuser("admin", "", "123456")

    content_type = ContentType.objects.get_for_model(WeChatApp)
    permission = Permission.objects.get(
        content_type=content_type, codename=perm)
    try:
        user = User.objects.get(username="wechat_admin")
    except:
        user = User.objects.create_user("wechat_admin", "", "123456", is_staff=True)

    user.user_permissions.add(permission)
    user.save()

    # 增加一个示例handler
    MessageHandler.objects.create_handler(
        app=app,
        name="debug custom reply",
        flags=MsgLogFlag.LOG_MESSAGE,
        rules=[Rule(
            type=Rule.Type.CONTAIN,
            pattern="ab"
        )],
        replies=[Reply(
            type=Reply.MsgType.CUSTOM,
            program="wechat.views.custom_business"
        ), Reply(
            type=Reply.MsgType.TEXT,
            content="hello!"
        )]
    )


def delete_data(apps, schema_editor):
    try:
        WeChatApp.objects.get_by_name(settings.SAMPLEAPPNAME).delete()
    except WeChatApp.DoesNotExist:
        pass
    try:
        User.objects.get(username="wechat_admin").delete()
    except:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ("wechat_django", "__latest__")
    ]

    operations = [
        migrations.RunPython(create_data, delete_data, True)
    ]
